#!/bin/sh
###
# Deploy a new version to chefcito.dev01.glue.gl
#
###

### Constants

app_name='chefcito'
app_repository='origin'
app_branch='development'

app_gluerokku_name='chefcito'
app_gluerokku_env='development'
app_gluerokku_repository='DEV'

check_dir() {
	current_dir="$(pwd | awk -F/ '{ print $NF }')"
	if [[ $current_dir != $app_name ]]; then
		echo "Invalid directory $current_dir, go to the $app_name app root"
		exit 1
	fi
}

check_remote() {
	remote="$(git remote | egrep ^$app_gluerokku_repository\$)"
	if [[ "x$remote" == "x" ]]; then
		echo "Remote ${app_gluerokku_repository} not found"
		exit 1
	fi
}

### Command line options

skip_pull=0
skip_build=0
skip_test=0
skip_push=0

while test $# -gt 0; do
	case "$1" in
		-h|--help)
			echo "Usage:  deploy_development [options]"
			echo " "
			echo "      --help, -h   : Displays this help =o)"
			echo "      --skip-pull  : Skips the 'git pull' step"
			echo "      --skip-build : Skips the 'grunt' build step"
			echo "      --skip-test  : Skips the 'mocha' testing step"
			echo "      --skip-push  : Skips the 'git push' to ${app_gluerokku_repository} server"
			exit 0
		;;
		--skip-pull)
			skip_pull=1
			shift
		;;
		--skip-build)
			skip_build=1
			shift
		;;
		--skip-test)
			skip_test=1
			shift
		;;
		--skip-push)
			skip_push=1
			shift
		;;
		*)
			break
		;;
	esac
done

### Internal options

color_1='\033[0;33m'
color_2='\033[1;33m'
color_no='\033[0m'
color_icon=$'\360\237\215\213'

check_dir
check_remote
echo "${color_icon}  ${color_1}===> ${color_2}Update${color_no}"
git checkout $app_branch || exit 1

if [[ $skip_pull == 0 ]]; then
	git pull $app_repository || exit 1
fi

if [[ $skip_build == 0 ]]; then
	echo "${color_icon}  ${color_1}===> ${color_2}Build${color_no}"
	grunt $app_gluerokku_env || exit 1
fi

if [[ $skip_test == 0 ]]; then
	echo "${color_icon}  ${color_1}===> ${color_2}Test${color_no}"
	grunt test || exit 1
fi

if [[ $skip_push == 0 ]]; then
	echo "${color_icon}  ${color_1}===> ${color_2}Deploy${color_no}"
	git push $app_gluerokku_repository $app_branch:master || exit 1
fi

echo "${color_icon}  ${color_1}===> ${color_2}Done!${color_no}"